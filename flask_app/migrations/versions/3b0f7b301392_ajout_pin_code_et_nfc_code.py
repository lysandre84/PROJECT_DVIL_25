"""Ajout pin_code et nfc_code

Revision ID: 3b0f7b301392
Revises: 
Create Date: 2025-05-18 14:10:52.910670

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '3b0f7b301392'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # --- 1) DROP DES CONTRAINTES FKs QUI BLOQUENT LA SUPPRESSION ---
    for table, fk in [
        ('access_logs',    'access_logs_ibfk_2'),
        ('nfc_badges',     'nfc_badges_ibfk_1'),
        ('rfid_cards',     'rfid_cards_ibfk_1'),
        ('key_codes',      'key_codes_ibfk_1'),
        ('comment',        'comment_ibfk_1'),
        # ajoutez d’autres (table, fk_name) si besoin
    ]:
        try:
            op.drop_constraint(fk, table, type_='foreignkey')
        except Exception:
            pass

    # --- 2) DROP DES TABLES ---
    for tbl in ['access_logs', 'nfc_badges', 'rfid_cards', 'key_codes', 'comment']:
        try:
            op.drop_table(tbl)
        except Exception:
            pass

    # --- 3) ALTERATION DE LA TABLE users ---
    with op.batch_alter_table('users', schema=None) as batch_op:
        # conversion du TIMESTAMP vers DateTime
        batch_op.alter_column(
            'created_at',
            existing_type=mysql.TIMESTAMP(),
            type_=sa.DateTime(),
            existing_nullable=True,
            existing_server_default=sa.text('current_timestamp()')
        )
        # recréation d’un index unique sur username
        batch_op.drop_index('username')
        batch_op.create_index(
            batch_op.f('ix_users_username'),
            ['username'],
            unique=True
        )

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.create_index('username', ['username'], unique=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('current_timestamp()'))

    op.create_table('key_codes',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('code', mysql.VARCHAR(length=10), nullable=False),
    sa.Column('user_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='key_codes_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('key_codes', schema=None) as batch_op:
        batch_op.create_index('code', ['code'], unique=True)

    op.create_table('comment',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('content', mysql.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('access_logs',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('user_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('lock_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('action', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('success', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('timestamp', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp()'), nullable=True),
    sa.ForeignKeyConstraint(['lock_id'], ['locks.id'], name='access_logs_ibfk_2'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='access_logs_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('nfc_badges',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('badge_id', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('user_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='nfc_badges_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('nfc_badges', schema=None) as batch_op:
        batch_op.create_index('badge_id', ['badge_id'], unique=True)

    op.create_table('rfid_cards',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('card_uid', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('user_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='rfid_cards_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('rfid_cards', schema=None) as batch_op:
        batch_op.create_index('card_uid', ['card_uid'], unique=True)

    op.create_table('locks',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('lock_name', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('lock_state', mysql.TINYINT(display_width=1), server_default=sa.text('1'), autoincrement=False, nullable=True),
    sa.Column('last_accessed', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
